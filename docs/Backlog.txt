 - Build 64-bit version of the necessary libraries (GLFW)
 - Use pre-cached attribute IDs instead of names for setting uniforms
 - Lateral (strafe) movement while looking down is very slow
 - Implement hierarchical scene/mesh model supporting attachments and transforms
 - Separate framework from concrete application (esp. world creation and input handling)
 - Define the game loop:
  - handle input
  - update model (physics etc.)
  - render
  - swap buffers
 - Extract light setup from Application, consider making Light a self-rendering, polymorphic type
 - Support planar shapes/meshes 
 - Support "enterable", room-like shapes with an inner and outer layer with inverted normals
 - Make it possible to use the classes with both GLFW and with Qt (make it framework-independent in general)